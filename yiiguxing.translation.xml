<application>
  <component name="AppStorage">
    <histories>
      <item value="java.security.spec.InvalidKeySpecException: encoded key spec not recognise" />
      <item value="encoded key spec not recognised" />
      <item value="Total" />
      <item value="Parameters" />
      <item value="Preparing" />
      <item value="LoggerFactory is not a Logback LoggerContext but Logback is on the classpath. Either remove Logback or the competing implementation (class org.slf4j.impl.Log4jLoggerFactory loaded from file:/D:/soft/maven/repository/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar). If you are using WebLogic you will need to add 'org.slf4j' to prefer-application-packages in WEB-INF/weblogic.xml: org.slf4j.impl.Log4jLoggerFactory" />
      <item value="Either remove Logback or the competing implementation" />
      <item value="If you are using WebLogic you will need to add 'org.slf4j' to prefer-application-packages in WEB-INF/weblogic.xml: org.slf4j.impl.Log4jLoggerFactory" />
      <item value="This method sets the value of the database column cms_help.id" />
      <item value="This method was generated by MyBatis Generator." />
      <item value="Tomcat initialized with port(s): 8848 (http) 2020-03-19 14:38:11.753 INFO 8244 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat] 2020-03-19 14:38:11.753 INFO 8244 --- [ main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/9.0.31] 2020-03-19 14:38:11.858 INFO 8244 --- [ main] o.a.c.c.C.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext 2020-03-19 14:38:11.858 INFO 8244 --- [ main] o.s.web.context.ContextLoader : Root WebApplicationContext: initialization completed in 733 ms 2020-03-19 14:38:11.901 WARN 8244 --- [ main] c.n.c.sources.URLConfigurationSource : No URLs will be polled as dynamic configuration sources. 2020-03-19 14:38:11.902 INFO 8244 --- [ main] c.n.c.sources.URLConfigurationSource : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 2020-03-19 14:38:11.906 WARN 8244 --- [ main] c.n.c.sources.URLConfigurationSource : No URLs will be polled as dynamic configuration sources. 2020-03-19 14:38:11.906 INFO 8244 --- [ main] c.n.c.sources.URLConfigurationSource : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath. 2020-03-19 14:38:12.018 INFO 8244 --- [ main] o.s.s.concurrent.ThreadPoolTaskExecutor : Initializing ExecutorService 'applicationTaskExecutor' 2020-03-19 14:38:13.579 INFO 8244 --- [ main] o.s.cloud.commons.util.InetUtils : Cannot determine local hostname 2020-03-19 14:38:13.671 INFO 8244 --- [ main] o.s.s.c.ThreadPoolTaskScheduler : Initializing ExecutorService 2020-03-19 14:38:15.222 INFO 8244 --- [ main] o.s.cloud.commons.util.InetUtils : Cannot determine local hostname 2020-03-19 14:38:15.380 INFO 8244 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 8848 (http) with context path '' 2020-03-19 14:38:15.544 INFO 8244 --- [ main] c.a.c.n.registry.NacosServiceRegistry : nacos registry, DEFAULT_GROUP gateway-service 192.168.52.1:8848 register finished 2020-03-19 14:38:17.039 INFO 8244 --- [ main] o.s.cloud.commons.util.InetUtils : Cannot determine local hostname 2020-03-19 14:38:17.040 INFO 8244 --- [ main] com.changgou.GatewayApplication : Started GatewayApplication in 9.952 seconds (JVM running for 11.038)" />
      <item value="nacos registry, DEFAULT_GROUP gateway-service 192.168.52.1:8848 register finished" />
      <item value="nacos registry, DEFAULT_GROUP gateway-service 192.168.52.1:8899 register finished" />
      <item value="Cannot determine local hostname" />
      <item value="Initializing ExecutorService" />
      <item value="To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath." />
      <item value="No URLs will be polled as dynamic configuration sources." />
      <item value="/var/tmp/kinsing' saved" />
      <item value="no crontab for root" />
      <item value="kinsing" />
      <item value="a71ad3167f9402d8c5388910862b16ae kinsing OK no crontab for root" />
      <item value="Shutting down plugin 'MEMORY'" />
      <item value="TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details)." />
      <item value="2020-03-16T08:09:23.704913Z 278 [Note] Got an error reading communication packets 2020-03-16T12:15:49.400453Z 279 [Note] Got an error reading communication packets" />
      <item value="2020-03-16T07:32:29.311911Z 106 [Note] Access denied for user 'root'@'43.226.67.149' (using password: YES)" />
      <item value="470912 Z" />
      <item value="0" />
      <item value="ApplicationEventMulticaster not initialized - call 'refresh' before multicasting events via the context: Root WebApplicationContext: startup date [Fri Mar 13 22:00:14 GMT+08:00 2020]; root of context hierarchy" />
      <item value="returned 1 warnings: [299 Elasticsearch-6.8.1-1fad4e1 &quot;[types removal] Specifying types in put mapping requests is deprecated. To be compatible with 7.0, the mapping definition should not be nested under the type name, and the parameter include_type_name must be provided and set to false" />
      <item value="No active profile set, falling back to default profiles: default" />
      <item value="Ignore the empty nacos configuration and get it based on dataId" />
      <item value="[BEAT] public sending beat to server: {&quot;cluster&quot;:&quot;DEFAULT&quot;,&quot;ip&quot;:&quot;192.168.10.98&quot;,&quot;metadata&quot;:{&quot;preserved.register.source&quot;:&quot;SPRING_CLOUD&quot;},&quot;port&quot;:8081,&quot;scheduled&quot;:true,&quot;serviceName&quot;:&quot;DEFAULT_GROUP@@pms-service&quot;,&quot;weight&quot;:1.0}" />
      <item value="Factory method 'sqlSessionFactory' threw exception; nested exception is com.baomidou.mybatisplus.core.exceptions.MybatisPlusException: Error: GlobalConfigUtils setMetaData Fail ! Cause:java.sql.SQLException: The server time zone value '�й���׼ʱ��' is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the 'serverTimezone' configuration property) to use a more specifc time zone value if you want to utilize time zone support." />
      <item value="The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server." />
      <item value="Could not get a resource from the pool" />
      <item value="Returns the index within this string of the first occurrence of the * specified substring." />
      <item value="Code shared by String and StringBuffer to do searches. The * source is the character array being searched, and the target * is the string being searched for." />
      <item value="The driver has not received any packets from the server." />
      <item value="Reentrant Lock" />
      <item value="Packing and unpacking ctl" />
      <item value="Gets the current value." />
      <item value="Proceed in 3 steps: * * 1. If fewer than corePoolSize threads are running, try to * start a new thread with the given command as its first * task. The call to addWorker atomically checks runState and * workerCount, and so prevents false alarms that would add * threads when it shouldn't, by returning false. * * 2. If a task can be successfully queued, then we still need * to double-check whether we should have added a thread * (because existing ones died since last checking) or that * the pool shut down since entry into this method. So we * recheck state and if necessary roll back the enqueuing if * stopped, or start a new thread if there are none. * * 3. If we cannot queue task, then we try to add a new * thread. If it fails, we know we are shut down or saturated * and so reject the task." />
      <item value="core Pool Size" />
      <item value="Creates an Executor that uses a single worker thread operating * off an unbounded queue. (Note however that if this single * thread terminates due to a failure during execution prior to * shutdown, a new one will take its place if needed to execute * subsequent tasks.) Tasks are guaranteed to execute * sequentially, and no more than one task will be active at any * given time. Unlike the otherwise equivalent * {@code newFixedThreadPool(1)} the returned executor is * guaranteed not to be reconfigurable to use additional threads" />
      <item value="Creates a thread pool that reuses a fixed number of threads * operating off a shared unbounded queue. At any point, at most * {@code nThreads} threads will be active processing tasks. * If additional tasks are submitted when all threads are active, * they will wait in the queue until a thread is available. * If any thread terminates due to a failure during execution * prior to shutdown, a new one will take its place if needed to * execute subsequent tasks. The threads in the pool will exist * until it is explicitly {@link ExecutorService#shutdown shutdown}." />
      <item value="the newly created thread pool" />
      <item value="the number of threads in the pool" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="48" />
        <entry key="ENGLISH" value="49" />
        <entry key="POLISH" value="1" />
      </map>
    </option>
  </component>
</application>